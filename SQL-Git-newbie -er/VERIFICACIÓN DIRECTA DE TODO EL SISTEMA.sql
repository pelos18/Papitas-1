-- =====================================================
-- VERIFICACIÓN DIRECTA DE TODO EL SISTEMA
-- Sin PROMPT - Solo resultados directos
-- =====================================================

-- SECCIÓN 1: VERIFICACIÓN DE TODAS LAS TABLAS
SELECT '=== SECCIÓN 1: VERIFICACIÓN DE TABLAS ===' as SECCION FROM dual;

-- 1.1 Tablas principales del diagrama ER
SELECT '1.1 TABLAS PRINCIPALES:' as SUBSECCION FROM dual;

WITH tablas_principales AS (
    SELECT 'CATEGORIAS' as tabla_esperada, 1 as orden FROM dual UNION ALL
    SELECT 'PROVEEDORES', 2 FROM dual UNION ALL
    SELECT 'PRODUCTOS', 3 FROM dual UNION ALL
    SELECT 'USUARIOS', 4 FROM dual UNION ALL
    SELECT 'CLIENTES', 5 FROM dual UNION ALL
    SELECT 'VENTAS', 6 FROM dual UNION ALL
    SELECT 'DETALLE_VENTAS', 7 FROM dual UNION ALL
    SELECT 'MOVIMIENTOS_INVENTARIO', 8 FROM dual UNION ALL
    SELECT 'ALERTAS_SISTEMA', 9 FROM dual UNION ALL
    SELECT 'NOTIFICACIONES', 10 FROM dual UNION ALL
    SELECT 'PROMOCIONES', 11 FROM dual UNION ALL
    SELECT 'COMBOS', 12 FROM dual UNION ALL
    SELECT 'DETALLE_COMBOS', 13 FROM dual UNION ALL
    SELECT 'OFERTAS_ESPECIALES', 14 FROM dual UNION ALL
    SELECT 'DEVOLUCIONES', 15 FROM dual UNION ALL
    SELECT 'CAJA', 16 FROM dual UNION ALL
    SELECT 'CORTES_CAJA', 17 FROM dual UNION ALL
    SELECT 'REPORTES_GENERADOS', 18 FROM dual UNION ALL
    SELECT 'AUDITORIA', 19 FROM dual
)
SELECT 
    tp.orden as NUM,
    tp.tabla_esperada as TABLA_REQUERIDA,
    CASE 
        WHEN ut.table_name IS NOT NULL THEN 'EXISTE'
        ELSE 'FALTA'
    END as ESTADO,
    NVL(ut.num_rows, 0) as FILAS
FROM tablas_principales tp
LEFT JOIN user_tables ut ON tp.tabla_esperada = ut.table_name
ORDER BY tp.orden;

-- 1.2 Resumen de cumplimiento
SELECT '1.2 RESUMEN CUMPLIMIENTO:' as SUBSECCION FROM dual;

WITH tablas_principales AS (
    SELECT 'CATEGORIAS' as tabla FROM dual UNION ALL SELECT 'PROVEEDORES' FROM dual UNION ALL
    SELECT 'PRODUCTOS' FROM dual UNION ALL SELECT 'USUARIOS' FROM dual UNION ALL
    SELECT 'CLIENTES' FROM dual UNION ALL SELECT 'VENTAS' FROM dual UNION ALL
    SELECT 'DETALLE_VENTAS' FROM dual UNION ALL SELECT 'MOVIMIENTOS_INVENTARIO' FROM dual UNION ALL
    SELECT 'ALERTAS_SISTEMA' FROM dual UNION ALL SELECT 'NOTIFICACIONES' FROM dual UNION ALL
    SELECT 'PROMOCIONES' FROM dual UNION ALL SELECT 'COMBOS' FROM dual UNION ALL
    SELECT 'DETALLE_COMBOS' FROM dual UNION ALL SELECT 'OFERTAS_ESPECIALES' FROM dual UNION ALL
    SELECT 'DEVOLUCIONES' FROM dual UNION ALL SELECT 'CAJA' FROM dual UNION ALL
    SELECT 'CORTES_CAJA' FROM dual UNION ALL SELECT 'REPORTES_GENERADOS' FROM dual UNION ALL
    SELECT 'AUDITORIA' FROM dual
)
SELECT 
    19 as TABLAS_REQUERIDAS,
    COUNT(ut.table_name) as TABLAS_CREADAS,
    19 - COUNT(ut.table_name) as TABLAS_FALTANTES,
    ROUND(COUNT(ut.table_name) * 100.0 / 19, 1) || '%' as PORCENTAJE_COMPLETADO
FROM tablas_principales tp
LEFT JOIN user_tables ut ON tp.tabla = ut.table_name;

-- SECCIÓN 2: VERIFICACIÓN DE TRIGGERS
SELECT '=== SECCIÓN 2: VERIFICACIÓN DE TRIGGERS ===' as SECCION FROM dual;

-- 2.1 Triggers esperados
SELECT '2.1 TRIGGERS ESPERADOS:' as SUBSECCION FROM dual;

WITH triggers_esperados AS (
    SELECT 'TRG_PRODUCTOS_CALCULOS' as trigger_name, 'CALCULOS' as grupo, 1 as orden FROM dual UNION ALL
    SELECT 'TRG_STOCK_CONTROL', 'CALCULOS', 2 FROM dual UNION ALL
    SELECT 'TRG_ALERTAS_CADUCIDAD', 'CALCULOS', 3 FROM dual UNION ALL
    SELECT 'TRG_CONTROL_CAJA', 'CALCULOS', 4 FROM dual UNION ALL
    SELECT 'TRG_AUDITORIA_PRODUCTOS', 'AUDITORIA', 5 FROM dual UNION ALL
    SELECT 'TRG_AUDITORIA_VENTAS', 'AUDITORIA', 6 FROM dual UNION ALL
    SELECT 'TRG_AUDITORIA_USUARIOS', 'AUDITORIA', 7 FROM dual UNION ALL
    SELECT 'TRG_NOTIFICACIONES_STOCK', 'NOTIFICACIONES', 8 FROM dual UNION ALL
    SELECT 'TRG_NOTIFICACIONES_CADUCIDAD', 'NOTIFICACIONES', 9 FROM dual UNION ALL
    SELECT 'TRG_NOTIFICACIONES_VENTAS', 'NOTIFICACIONES', 10 FROM dual UNION ALL
    SELECT 'TRG_NOTIFICACIONES_SISTEMA', 'NOTIFICACIONES', 11 FROM dual UNION ALL
    SELECT 'TRG_CALCULOS_VENTAS', 'VENTAS', 12 FROM dual UNION ALL
    SELECT 'TRG_CALCULOS_DETALLE_VENTAS', 'VENTAS', 13 FROM dual UNION ALL
    SELECT 'TRG_ACTUALIZAR_TOTALES_VENTA', 'VENTAS', 14 FROM dual UNION ALL
    SELECT 'TRG_CONTROL_DEVOLUCIONES', 'VENTAS', 15 FROM dual UNION ALL
    SELECT 'TRG_APLICACION_PROMOCIONES', 'PROMOCIONES', 16 FROM dual UNION ALL
    SELECT 'TRG_CONTROL_COMBOS', 'PROMOCIONES', 17 FROM dual UNION ALL
    SELECT 'TRG_GENERACION_REPORTES', 'REPORTES', 18 FROM dual
)
SELECT 
    te.orden as NUM,
    te.grupo as GRUPO,
    te.trigger_name as TRIGGER,
    NVL(ut.status, 'NO_EXISTE') as ESTADO,
    NVL(ut.table_name, 'N/A') as TABLA
FROM triggers_esperados te
LEFT JOIN user_triggers ut ON te.trigger_name = ut.trigger_name
ORDER BY te.orden;

-- 2.2 Todos los triggers existentes
SELECT '2.2 TODOS LOS TRIGGERS EXISTENTES:' as SUBSECCION FROM dual;

SELECT 
    trigger_name as TRIGGER,
    table_name as TABLA,
    status as ESTADO,
    triggering_event as EVENTO
FROM user_triggers 
ORDER BY trigger_name;

-- SECCIÓN 3: ESTRUCTURA CRÍTICA
SELECT '=== SECCIÓN 3: ESTRUCTURA CRÍTICA ===' as SECCION FROM dual;

-- 3.1 Estructura de PRODUCTOS
SELECT '3.1 ESTRUCTURA DE PRODUCTOS:' as SUBSECCION FROM dual;

SELECT 
    column_id as NUM,
    column_name as COLUMNA,
    data_type as TIPO,
    CASE WHEN nullable = 'Y' THEN 'SI' ELSE 'NO' END as NULO
FROM user_tab_columns 
WHERE table_name = 'PRODUCTOS'
ORDER BY column_id;

-- 3.2 Verificación VALOR_INVENTARIO
SELECT '3.2 VERIFICACION VALOR_INVENTARIO:' as SUBSECCION FROM dual;

SELECT 
    CASE 
        WHEN COUNT(*) > 0 THEN 'COLUMNA_EXISTE'
        ELSE 'COLUMNA_NO_EXISTE'
    END as ESTADO_COLUMNA,
    CASE 
        WHEN COUNT(*) > 0 THEN 
            (SELECT data_type || '(' || data_precision || ',' || data_scale || ')' 
             FROM user_tab_columns 
             WHERE table_name = 'PRODUCTOS' AND column_name = 'VALOR_INVENTARIO')
        ELSE 'N/A'
    END as TIPO_DATOS
FROM user_tab_columns 
WHERE table_name = 'PRODUCTOS' AND column_name = 'VALOR_INVENTARIO';

-- SECCIÓN 4: DATOS
SELECT '=== SECCIÓN 4: VERIFICACIÓN DE DATOS ===' as SECCION FROM dual;

-- 4.1 Conteo de registros
SELECT '4.1 REGISTROS EN TABLAS:' as SUBSECCION FROM dual;

SELECT 'CATEGORIAS' as TABLA, COUNT(*) as REGISTROS FROM CATEGORIAS
UNION ALL SELECT 'PROVEEDORES', COUNT(*) FROM PROVEEDORES
UNION ALL SELECT 'PRODUCTOS', COUNT(*) FROM PRODUCTOS
UNION ALL SELECT 'USUARIOS', COUNT(*) FROM USUARIOS
UNION ALL SELECT 'CLIENTES', COUNT(*) FROM CLIENTES
UNION ALL SELECT 'VENTAS', COUNT(*) FROM VENTAS
UNION ALL SELECT 'DETALLE_VENTAS', COUNT(*) FROM DETALLE_VENTAS
UNION ALL SELECT 'MOVIMIENTOS_INVENTARIO', COUNT(*) FROM MOVIMIENTOS_INVENTARIO
UNION ALL SELECT 'ALERTAS_SISTEMA', COUNT(*) FROM ALERTAS_SISTEMA
UNION ALL SELECT 'NOTIFICACIONES', COUNT(*) FROM NOTIFICACIONES
UNION ALL SELECT 'PROMOCIONES', COUNT(*) FROM PROMOCIONES
UNION ALL SELECT 'COMBOS', COUNT(*) FROM COMBOS
UNION ALL SELECT 'DETALLE_COMBOS', COUNT(*) FROM DETALLE_COMBOS
UNION ALL SELECT 'OFERTAS_ESPECIALES', COUNT(*) FROM OFERTAS_ESPECIALES
UNION ALL SELECT 'DEVOLUCIONES', COUNT(*) FROM DEVOLUCIONES
UNION ALL SELECT 'CAJA', COUNT(*) FROM CAJA
UNION ALL SELECT 'CORTES_CAJA', COUNT(*) FROM CORTES_CAJA
UNION ALL SELECT 'REPORTES_GENERADOS', COUNT(*) FROM REPORTES_GENERADOS
UNION ALL SELECT 'AUDITORIA', COUNT(*) FROM AUDITORIA
ORDER BY TABLA;

-- 4.2 Análisis de PRODUCTOS
SELECT '4.2 ANALISIS PRODUCTOS:' as SUBSECCION FROM dual;

SELECT 
    COUNT(*) as TOTAL_PRODUCTOS,
    COUNT(CASE WHEN activo = 1 THEN 1 END) as PRODUCTOS_ACTIVOS,
    COUNT(CASE WHEN valor_inventario IS NOT NULL THEN 1 END) as CON_VALOR_INVENTARIO,
    COUNT(CASE WHEN valor_inventario > 0 THEN 1 END) as CON_VALOR_POSITIVO,
    TO_CHAR(NVL(SUM(valor_inventario), 0), '999,999,999.99') as VALOR_TOTAL_INVENTARIO
FROM PRODUCTOS;

-- 4.3 Muestra de productos
SELECT '4.3 MUESTRA DE PRODUCTOS (5 PRIMEROS):' as SUBSECCION FROM dual;

SELECT 
    id_producto as ID,
    SUBSTR(nombre, 1, 20) as NOMBRE,
    stock_actual as STOCK,
    costo_total as COSTO,
    precio_venta as PRECIO,
    valor_inventario as VALOR_INV
FROM PRODUCTOS 
WHERE ROWNUM <= 5
ORDER BY id_producto;

-- SECCIÓN 5: RESUMEN FINAL
SELECT '=== SECCIÓN 5: RESUMEN EJECUTIVO FINAL ===' as SECCION FROM dual;

-- 5.1 Estadísticas generales
SELECT '5.1 ESTADISTICAS GENERALES:' as SUBSECCION FROM dual;

WITH stats AS (
    SELECT 
        (SELECT COUNT(*) FROM user_tables WHERE table_name IN (
            'CATEGORIAS', 'PROVEEDORES', 'PRODUCTOS', 'USUARIOS', 'CLIENTES',
            'VENTAS', 'DETALLE_VENTAS', 'MOVIMIENTOS_INVENTARIO', 'ALERTAS_SISTEMA',
            'NOTIFICACIONES', 'PROMOCIONES', 'COMBOS', 'DETALLE_COMBOS',
            'OFERTAS_ESPECIALES', 'DEVOLUCIONES', 'CAJA', 'CORTES_CAJA',
            'REPORTES_GENERADOS', 'AUDITORIA'
        )) as tablas_principales,
        (SELECT COUNT(*) FROM user_triggers WHERE trigger_name LIKE 'TRG_%' AND status = 'ENABLED') as triggers_funcionando,
        (SELECT COUNT(*) FROM user_tab_columns WHERE table_name = 'PRODUCTOS' AND column_name = 'VALOR_INVENTARIO') as columna_valor_inv,
        (SELECT COUNT(*) FROM PRODUCTOS) as total_productos,
        (SELECT COUNT(*) FROM PRODUCTOS WHERE valor_inventario IS NOT NULL) as productos_con_valor
    FROM dual
)
SELECT 
    tablas_principales as TABLAS_PRINCIPALES,
    triggers_funcionando as TRIGGERS_FUNCIONANDO,
    columna_valor_inv as COLUMNA_VALOR_INV,
    total_productos as TOTAL_PRODUCTOS,
    productos_con_valor as PRODUCTOS_CON_VALOR
FROM stats;

-- 5.2 VEREDICTO FINAL
SELECT '5.2 VEREDICTO FINAL:' as SUBSECCION FROM dual;

WITH evaluacion AS (
    SELECT 
        CASE WHEN (SELECT COUNT(*) FROM user_tables WHERE table_name IN (
            'CATEGORIAS', 'PROVEEDORES', 'PRODUCTOS', 'USUARIOS', 'CLIENTES',
            'VENTAS', 'DETALLE_VENTAS', 'MOVIMIENTOS_INVENTARIO', 'ALERTAS_SISTEMA',
            'NOTIFICACIONES', 'PROMOCIONES', 'COMBOS', 'DETALLE_COMBOS',
            'OFERTAS_ESPECIALES', 'DEVOLUCIONES', 'CAJA', 'CORTES_CAJA',
            'REPORTES_GENERADOS', 'AUDITORIA'
        )) >= 15 THEN 1 ELSE 0 END as tablas_ok,
        
        CASE WHEN (SELECT COUNT(*) FROM user_triggers WHERE trigger_name LIKE 'TRG_%' AND status = 'ENABLED') >= 10 THEN 1 ELSE 0 END as triggers_ok,
        
        CASE WHEN (SELECT COUNT(*) FROM user_tab_columns WHERE table_name = 'PRODUCTOS' AND column_name = 'VALOR_INVENTARIO') = 1 THEN 1 ELSE 0 END as valor_inv_ok,
        
        CASE WHEN (SELECT COUNT(*) FROM PRODUCTOS WHERE valor_inventario IS NOT NULL) > 0 THEN 1 ELSE 0 END as datos_ok
    FROM dual
)
SELECT 
    CASE WHEN tablas_ok = 1 THEN 'TABLAS_OK' ELSE 'FALTAN_TABLAS' END as ESTADO_TABLAS,
    CASE WHEN triggers_ok = 1 THEN 'TRIGGERS_OK' ELSE 'FALTAN_TRIGGERS' END as ESTADO_TRIGGERS,
    CASE WHEN valor_inv_ok = 1 THEN 'VALOR_INV_OK' ELSE 'FALTA_VALOR_INV' END as ESTADO_VALOR_INV,
    CASE WHEN datos_ok = 1 THEN 'DATOS_OK' ELSE 'FALTAN_DATOS' END as ESTADO_DATOS,
    CASE 
        WHEN tablas_ok = 1 AND triggers_ok = 1 AND valor_inv_ok = 1 AND datos_ok = 1 
        THEN 'SISTEMA_100_PORCIENTO_FUNCIONAL'
        WHEN tablas_ok = 1 AND triggers_ok = 1 AND valor_inv_ok = 1 
        THEN 'SISTEMA_FUNCIONAL_FALTA_POBLAR_DATOS'
        WHEN tablas_ok = 1 AND valor_inv_ok = 1 
        THEN 'SISTEMA_PARCIAL_REVISAR_TRIGGERS'
        ELSE 'SISTEMA_INCOMPLETO'
    END as VEREDICTO_FINAL
FROM evaluacion;

SELECT '=== VERIFICACION COMPLETA TERMINADA ===' as FIN FROM dual;
