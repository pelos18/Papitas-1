-- ‚úÖ AGREGAR COLUMNAS FALTANTES EN USUARIOS
PROMPT 'üîß Agregando columnas faltantes en USUARIOS...'

-- CUENTA_BLOQUEADA (la que falta seg√∫n el error)
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE USUARIOS ADD CUENTA_BLOQUEADA NUMBER(1) DEFAULT 0';
    DBMS_OUTPUT.PUT_LINE('‚úÖ CUENTA_BLOQUEADA agregada');
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1430 THEN
            DBMS_OUTPUT.PUT_LINE('‚ö†Ô∏è CUENTA_BLOQUEADA ya existe');
        ELSE
            RAISE;
        END IF;
END;
/

-- INTENTOS_FALLIDOS
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE USUARIOS ADD INTENTOS_FALLIDOS NUMBER(3) DEFAULT 0';
    DBMS_OUTPUT.PUT_LINE('‚úÖ INTENTOS_FALLIDOS agregada');
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1430 THEN
            DBMS_OUTPUT.PUT_LINE('‚ö†Ô∏è INTENTOS_FALLIDOS ya existe');
        ELSE
            RAISE;
        END IF;
END;
/

-- NOMBRE_USUARIO (para compatibilidad con Spring Security)
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE USUARIOS ADD NOMBRE_USUARIO VARCHAR2(50)';
    DBMS_OUTPUT.PUT_LINE('‚úÖ NOMBRE_USUARIO agregada');
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1430 THEN
            DBMS_OUTPUT.PUT_LINE('‚ö†Ô∏è NOMBRE_USUARIO ya existe');
        ELSE
            RAISE;
        END IF;
END;
/

-- PASSWORD_HASH (para compatibilidad con Spring Security)
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE USUARIOS ADD PASSWORD_HASH VARCHAR2(255)';
    DBMS_OUTPUT.PUT_LINE('‚úÖ PASSWORD_HASH agregada');
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1430 THEN
            DBMS_OUTPUT.PUT_LINE('‚ö†Ô∏è PASSWORD_HASH ya existe');
        ELSE
            RAISE;
        END IF;
END;
/

-- NOMBRE_COMPLETO
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE USUARIOS ADD NOMBRE_COMPLETO VARCHAR2(100)';
    DBMS_OUTPUT.PUT_LINE('‚úÖ NOMBRE_COMPLETO agregada');
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1430 THEN
            DBMS_OUTPUT.PUT_LINE('‚ö†Ô∏è NOMBRE_COMPLETO ya existe');
        ELSE
            RAISE;
        END IF;
END;
/

-- Actualizar datos existentes para compatibilidad
PROMPT 'üîÑ Actualizando datos existentes...'

-- Copiar USUARIO a NOMBRE_USUARIO si est√° vac√≠o
UPDATE USUARIOS 
SET NOMBRE_USUARIO = USUARIO 
WHERE NOMBRE_USUARIO IS NULL;

-- Copiar PASSWORD a PASSWORD_HASH si est√° vac√≠o
UPDATE USUARIOS 
SET PASSWORD_HASH = PASSWORD 
WHERE PASSWORD_HASH IS NULL;

-- Crear NOMBRE_COMPLETO combinando NOMBRE y APELLIDOS
UPDATE USUARIOS 
SET NOMBRE_COMPLETO = NOMBRE || ' ' || APELLIDOS 
WHERE NOMBRE_COMPLETO IS NULL;

COMMIT;

PROMPT 'üìã Verificando estructura final de USUARIOS:'
DESC USUARIOS;

PROMPT 'üéØ ¬°Columnas agregadas! Ahora ejecuta Spring Boot.'


















-- ‚úÖ VERIFICAR COMPATIBILIDAD CON SPRING BOOT
PROMPT 'üîç Verificando compatibilidad con Spring Boot...'

PROMPT 'üë§ Estructura de USUARIOS:'
SELECT COLUMN_NAME, DATA_TYPE, NULLABLE 
FROM USER_TAB_COLUMNS 
WHERE TABLE_NAME = 'USUARIOS'
ORDER BY COLUMN_ID;

PROMPT 'üè¢ Estructura de PROVEEDORES:'
SELECT COLUMN_NAME, DATA_TYPE, NULLABLE 
FROM USER_TAB_COLUMNS 
WHERE TABLE_NAME = 'PROVEEDORES'
ORDER BY COLUMN_ID;

PROMPT 'üì¶ Estructura de PRODUCTOS:'
SELECT COLUMN_NAME, DATA_TYPE, NULLABLE 
FROM USER_TAB_COLUMNS 
WHERE TABLE_NAME = 'PRODUCTOS'
ORDER BY COLUMN_ID;

PROMPT '‚úÖ Verificaci√≥n completada - Listo para Spring Boot'
